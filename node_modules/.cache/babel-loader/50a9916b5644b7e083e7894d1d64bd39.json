{"ast":null,"code":"'use strict';\n/**\n * Creates a string with the same length as `numSpaces` parameter\n **/\n\nexports.indent = function indent(numSpaces) {\n  return new Array(numSpaces + 1).join(' ');\n};\n/**\n * Gets the string length of the longer index in a hash\n **/\n\n\nexports.getMaxIndexLength = function (input) {\n  var maxWidth = 0;\n  Object.getOwnPropertyNames(input).forEach(function (key) {\n    // Skip undefined values.\n    if (input[key] === undefined) {\n      return;\n    }\n\n    maxWidth = Math.max(maxWidth, key.length);\n  });\n  return maxWidth;\n};","map":{"version":3,"names":["exports","indent","numSpaces","Array","join","getMaxIndexLength","input","maxWidth","Object","getOwnPropertyNames","forEach","key","undefined","Math","max","length"],"sources":["/home/jimd325/projects/courses/401/classRepo/seattle-javascript-401n21/classes/class-26/lab/RESTy/starter-code/node_modules/prettyjson/lib/utils.js"],"sourcesContent":["'use strict';\n\n/**\n * Creates a string with the same length as `numSpaces` parameter\n **/\nexports.indent = function indent(numSpaces) {\n  return new Array(numSpaces+1).join(' ');\n};\n\n/**\n * Gets the string length of the longer index in a hash\n **/\nexports.getMaxIndexLength = function(input) {\n  var maxWidth = 0;\n\n  Object.getOwnPropertyNames(input).forEach(function(key) {\n    // Skip undefined values.\n    if (input[key] === undefined) {\n      return;\n    }\n\n    maxWidth = Math.max(maxWidth, key.length);\n  });\n  return maxWidth;\n};\n"],"mappings":"AAAA;AAEA;AACA;AACA;;AACAA,OAAO,CAACC,MAAR,GAAiB,SAASA,MAAT,CAAgBC,SAAhB,EAA2B;EAC1C,OAAO,IAAIC,KAAJ,CAAUD,SAAS,GAAC,CAApB,EAAuBE,IAAvB,CAA4B,GAA5B,CAAP;AACD,CAFD;AAIA;AACA;AACA;;;AACAJ,OAAO,CAACK,iBAAR,GAA4B,UAASC,KAAT,EAAgB;EAC1C,IAAIC,QAAQ,GAAG,CAAf;EAEAC,MAAM,CAACC,mBAAP,CAA2BH,KAA3B,EAAkCI,OAAlC,CAA0C,UAASC,GAAT,EAAc;IACtD;IACA,IAAIL,KAAK,CAACK,GAAD,CAAL,KAAeC,SAAnB,EAA8B;MAC5B;IACD;;IAEDL,QAAQ,GAAGM,IAAI,CAACC,GAAL,CAASP,QAAT,EAAmBI,GAAG,CAACI,MAAvB,CAAX;EACD,CAPD;EAQA,OAAOR,QAAP;AACD,CAZD"},"metadata":{},"sourceType":"script"}