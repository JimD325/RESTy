{"ast":null,"code":"var _jsxFileName = \"/home/jimd325/projects/courses/401/classRepo/seattle-javascript-401n21/classes/class-26/lab/RESTy/starter-code/src/components/form/form.tsx\",\n    _s = $RefreshSig$();\n\nimport './form.scss';\nimport { Body } from \"../body/body\";\nimport { useState } from 'react'; // everything with these properties will be treated as the type \"FormState\"\n// interface is used to make types that you specify. \n// follows principals of \"duck typing\"\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n//Change state.body to undefined if the a method is selected which does not require the body\nexport const changeMethod = (state, method) => {\n  if (method === \"GET\" || method === \"PUT\") {\n    state.body = undefined;\n  }\n\n  return { ...state,\n    method\n  };\n}; // Change state.body to an object if the a method is selected which does not require the body\n\nexport const setBody = (state, body) => {\n  if (state.method !== \"GET\" && state.method !== \"PUT\") {\n    state.body = body;\n  }\n\n  ;\n  return state;\n};\nexport const dispatchAction = (state, action) => {\n  switch (action.action) {}\n};\nexport const Form = props => {\n  _s();\n\n  // const [url, setUrl] = useState('');\n  const [method, setMethod] = useState(null);\n\n  const handleSubmit = (e, callback) => {\n    e.preventDefault();\n    let formData = {\n      method: method,\n      url: e.target[0].value\n    };\n    callback(formData);\n  };\n\n  const handleMethodChange = e => {\n    e.preventDefault();\n    setMethod(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => handleSubmit(e, props.APICall),\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Enter URL: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"url\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"GO!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"methods\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => handleMethodChange(e),\n          value: \"GET\",\n          children: \"GET\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => handleMethodChange(e),\n          value: \"POST\",\n          children: \"POST\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => handleMethodChange(e),\n          value: \"PUT\",\n          children: \"PUT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => handleMethodChange(e),\n          value: \"DELETE\",\n          children: \"DELETE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Body, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Form, \"I8rXCluQAHfrkMftTtSNzMv8AGQ=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["Body","useState","changeMethod","state","method","body","undefined","setBody","dispatchAction","action","Form","props","setMethod","handleSubmit","e","callback","preventDefault","formData","url","target","value","handleMethodChange","APICall"],"sources":["/home/jimd325/projects/courses/401/classRepo/seattle-javascript-401n21/classes/class-26/lab/RESTy/starter-code/src/components/form/form.tsx"],"sourcesContent":["\nimport './form.scss';\nimport { Body } from \"../body/body\"\nimport { useState, useReducer, useCallback } from 'react';\n\n\n// everything with these properties will be treated as the type \"FormState\"\n// interface is used to make types that you specify. \n// follows principals of \"duck typing\"\ninterface FormState {\n  method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\";\n  url: string;\n  body: object | undefined;\n  response: object | undefined;\n}\n\n//Change state.body to undefined if the a method is selected which does not require the body\nexport const changeMethod = (\n  state: FormState,\n  method: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\n) => {\n  if (method === \"GET\" || method === \"PUT\") {\n    state.body = undefined\n  } return {\n    ...state, method\n  };\n};\n\n// Change state.body to an object if the a method is selected which does not require the body\nexport const setBody = (\n  state: FormState,\n  body: object\n) => {\n  if (state.method !== \"GET\" && state.method !== \"PUT\") {\n    state.body = body;\n  };\n  return state;\n}\n\nexport const dispatchAction = (\n  state: FormState,\n  action: {\n    action: string,\n    body: unknown,\n  }) => {\n    switch (action.action){\n      \n    }\n  }\n  \n\n\n\n\n\n\n\nexport const Form = (props: any) => {\n  // const [url, setUrl] = useState('');\n  const [method, setMethod] = useState(null);\n\n  const handleSubmit = (e: any, callback: Function) => {\n    e.preventDefault();\n    let formData = {\n      method: method,\n      url: e.target[0].value,\n    };\n    callback(formData);\n  }\n\n  const handleMethodChange = (e: any) => {\n    e.preventDefault();\n    setMethod(e.target.value);\n  }\n\n\n\n\n\n  return (\n    <>\n      <form onSubmit={(e) => handleSubmit(e, props.APICall)}>\n        <label >\n          <span>Enter URL: </span>\n          <input name='url' type='text' />\n          <button type=\"submit\">GO!</button>\n        </label>\n        <div className=\"methods\">\n          <button onClick={(e) => handleMethodChange(e)} value=\"GET\" >GET</button>\n          <button onClick={(e) => handleMethodChange(e)} value=\"POST\">POST</button>\n          <button onClick={(e) => handleMethodChange(e)} value=\"PUT\">PUT</button>\n          <button onClick={(e) => handleMethodChange(e)} value=\"DELETE\">DELETE</button>\n        </div>\n      </form>\n      <Body />\n    </>\n  );\n}\n\n\n"],"mappings":";;;AACA,OAAO,aAAP;AACA,SAASA,IAAT,QAAqB,cAArB;AACA,SAASC,QAAT,QAAkD,OAAlD,C,CAGA;AACA;AACA;;;;AAQA;AACA,OAAO,MAAMC,YAAY,GAAG,CAC1BC,KAD0B,EAE1BC,MAF0B,KAGvB;EACH,IAAIA,MAAM,KAAK,KAAX,IAAoBA,MAAM,KAAK,KAAnC,EAA0C;IACxCD,KAAK,CAACE,IAAN,GAAaC,SAAb;EACD;;EAAC,OAAO,EACP,GAAGH,KADI;IACGC;EADH,CAAP;AAGH,CATM,C,CAWP;;AACA,OAAO,MAAMG,OAAO,GAAG,CACrBJ,KADqB,EAErBE,IAFqB,KAGlB;EACH,IAAIF,KAAK,CAACC,MAAN,KAAiB,KAAjB,IAA0BD,KAAK,CAACC,MAAN,KAAiB,KAA/C,EAAsD;IACpDD,KAAK,CAACE,IAAN,GAAaA,IAAb;EACD;;EAAA;EACD,OAAOF,KAAP;AACD,CARM;AAUP,OAAO,MAAMK,cAAc,GAAG,CAC5BL,KAD4B,EAE5BM,MAF4B,KAKtB;EACJ,QAAQA,MAAM,CAACA,MAAf;AAGD,CATI;AAkBP,OAAO,MAAMC,IAAI,GAAIC,KAAD,IAAgB;EAAA;;EAClC;EACA,MAAM,CAACP,MAAD,EAASQ,SAAT,IAAsBX,QAAQ,CAAC,IAAD,CAApC;;EAEA,MAAMY,YAAY,GAAG,CAACC,CAAD,EAASC,QAAT,KAAgC;IACnDD,CAAC,CAACE,cAAF;IACA,IAAIC,QAAQ,GAAG;MACbb,MAAM,EAAEA,MADK;MAEbc,GAAG,EAAEJ,CAAC,CAACK,MAAF,CAAS,CAAT,EAAYC;IAFJ,CAAf;IAIAL,QAAQ,CAACE,QAAD,CAAR;EACD,CAPD;;EASA,MAAMI,kBAAkB,GAAIP,CAAD,IAAY;IACrCA,CAAC,CAACE,cAAF;IACAJ,SAAS,CAACE,CAAC,CAACK,MAAF,CAASC,KAAV,CAAT;EACD,CAHD;;EASA,oBACE;IAAA,wBACE;MAAM,QAAQ,EAAGN,CAAD,IAAOD,YAAY,CAACC,CAAD,EAAIH,KAAK,CAACW,OAAV,CAAnC;MAAA,wBACE;QAAA,wBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAO,IAAI,EAAC,KAAZ;UAAkB,IAAI,EAAC;QAAvB;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAQ,IAAI,EAAC,QAAb;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAME;QAAK,SAAS,EAAC,SAAf;QAAA,wBACE;UAAQ,OAAO,EAAGR,CAAD,IAAOO,kBAAkB,CAACP,CAAD,CAA1C;UAA+C,KAAK,EAAC,KAArD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAQ,OAAO,EAAGA,CAAD,IAAOO,kBAAkB,CAACP,CAAD,CAA1C;UAA+C,KAAK,EAAC,MAArD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF,eAGE;UAAQ,OAAO,EAAGA,CAAD,IAAOO,kBAAkB,CAACP,CAAD,CAA1C;UAA+C,KAAK,EAAC,KAArD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHF,eAIE;UAAQ,OAAO,EAAGA,CAAD,IAAOO,kBAAkB,CAACP,CAAD,CAA1C;UAA+C,KAAK,EAAC,QAArD;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAJF;MAAA;QAAA;QAAA;QAAA;MAAA,QANF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAcE,QAAC,IAAD;MAAA;MAAA;MAAA;IAAA,QAdF;EAAA,gBADF;AAkBD,CAxCM;;GAAMJ,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}