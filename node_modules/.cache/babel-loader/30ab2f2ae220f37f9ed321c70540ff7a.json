{"ast":null,"code":"var _jsxFileName = \"/home/jimd325/projects/courses/401/classRepo/seattle-javascript-401n21/classes/class-26/lab/RESTy/starter-code/src/app.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useReducer } from 'react';\nimport './app.scss';\nimport { Header } from './components/header/header';\nimport { Footer } from './components/footer/footer';\nimport { Form } from './components/form/form';\nimport { Results } from './components/results/results';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const dispatchAction = (state, action) => {\n  switch (action.action) {\n    case 'data':\n      return setData(state, action.body);\n\n    case 'requestParams':\n      return setRequestParams(state, action.body);\n\n    case 'history':\n      return setHistory(state, action.body);\n\n    default:\n      return state;\n  }\n};\nexport const setData = (state, data) => {\n  state.data = data;\n  console.log(\"state on set data after state.data assigned value----->\", state);\n  return state;\n};\nexport const setRequestParams = (state, requestParams) => {\n  state.requestParams = requestParams;\n  console.log(\"state on set requestParams after state.requestParams assigned value----->\", state);\n  return state;\n};\nexport const sethistor = (state, histor) => {\n  state.histor = histor;\n  console.log(\"state on set histor after state.histor assigned value----->\", state);\n  return state;\n};\n\nconst App = () => {\n  _s();\n\n  const [state, dispatch] = useReducer(dispatchAction, {\n    data: {},\n    requestParams: {\n      method: \"Pick a method\",\n      url: \"Pick an API\"\n    },\n    history: []\n  });\n\n  const updateData = data => {\n    dispatch({\n      action: \"data\",\n      body: data\n    });\n  };\n\n  const [data, setData] = useState({});\n  const [requestParams, setRequestParams] = useState({\n    method: \"Pick a method\",\n    url: \"Pick an API\"\n  });\n\n  async function APICall(req) {\n    // setHistory()\n    console.log(\"req on APP API call\", req);\n\n    if (req.method === \"GET\") {\n      const res = await fetch(req.url, {\n        method: req.method\n      });\n      let parsedRes = await res.json();\n      let data = {\n        parsedRes\n      };\n      updateData(data);\n      setRequestParams(req);\n    } else {\n      setRequestParams(req);\n      setData({});\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Request Params:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Request Method: \", requestParams.method]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"URL: \", requestParams.url]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        response: data,\n        APICall: APICall\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Results, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"lAN07glZ046mWJ09gHKclbhnNqM=\");\n\n_c = App;\nexport default App;\nexport {};\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useReducer","Header","Footer","Form","Results","dispatchAction","state","action","setData","body","setRequestParams","setHistory","data","console","log","requestParams","sethistor","histor","App","dispatch","method","url","history","updateData","APICall","req","res","fetch","parsedRes","json"],"sources":["/home/jimd325/projects/courses/401/classRepo/seattle-javascript-401n21/classes/class-26/lab/RESTy/starter-code/src/app.tsx"],"sourcesContent":["import React, { useState, useReducer } from 'react';\n\nimport './app.scss';\n\nimport { Header } from './components/header/header';\nimport { Footer } from './components/footer/footer';\nimport { Form } from './components/form/form';\nimport { Results } from './components/results/results';\nimport { FormState } from './components/form/form';\n\nexport interface AppState {\n  data: object | undefined,\n  requestParams: object | undefined,\n  history: any[]\n}\n\nexport const dispatchAction = (\n  state: AppState,\n  action: {\n    action: string,\n    body: unknown,\n  }) => {\n  switch (action.action) {\n    case 'data':\n      return setData(state, action.body as object)\n    case 'requestParams':\n      return setRequestParams(state, action.body as object)\n    case 'history':\n      return setHistory(state, action.body as object)\n    default:\n      return state;\n  }\n}\n\nexport const setData = (\n  state: AppState,\n  data: object,\n  ) => {\n   state.data = data;\n   console.log(\"state on set data after state.data assigned value----->\", state);\n   return state;\n}\n\nexport const setRequestParams = (\n  state: AppState,\n  requestParams: object,\n  ) => {\n   state.requestParams = requestParams;\n   console.log(\"state on set requestParams after state.requestParams assigned value----->\", state);\n   return state;\n}\n\nexport const sethistor = (\n  state: AppState,\n  histor: object,\n  ) => {\n   state.histor = histor;\n   console.log(\"state on set histor after state.histor assigned value----->\", state);\n   return state;\n}\n\n\n\n\nconst App = () => {\n  const [state, dispatch] = useReducer(\n    dispatchAction, {\n    data: {},\n    requestParams: {\n      method: \"Pick a method\",\n      url: \"Pick an API\"\n    },\n    history: [],\n  }\n  )\n\n  const updateData = (data: object) => {\n    dispatch({action: \"data\", body: data})\n  }\n\n\n\n\n  const [data, setData] = useState({});\n  const [requestParams, setRequestParams] = useState({ method: \"Pick a method\", url: \"Pick an API\" });\n\n\n\n  async function APICall(req: any) {\n    // setHistory()\n    console.log(\"req on APP API call\", req);\n    if (req.method === \"GET\") {\n      const res = await fetch(req.url, { method: req.method });\n      let parsedRes = await res.json();\n      let data = { parsedRes };\n      updateData(data);\n      setRequestParams(req);\n    } else {\n      setRequestParams(req);\n      setData({});\n    }\n  }\n\n  return (\n    <>\n      <Header />\n      <section>\n        <div>Request Params:</div>\n        <div>Request Method: {requestParams.method}</div>\n        <div>URL: {requestParams.url}</div>\n      </section>\n      <div id=\"main\">\n        <Form response={data} APICall={APICall} />\n        <Results data={data} />\n      </div>\n      <Footer />\n    </>\n  );\n}\n\n\n\n\nexport default App;\nexport { };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}